Release Notes
=============
As this is my first micro controller project, please don't expect perfect 
code. Hints on where I went wrong and how to do things right are always 
welcome. Please send all constructive criticism, questions, feature 
requests, patches, fan mail, hate mail, legal threats etc. to tido@4gh.eu
or join the discussion on the Budget Light Forum: http://budgetlightforum.cz.cc


This is the second alpha release of the BLF-VLD. It can be built in three 
configurations, namely simple, fixed and programmable modes. In simple mode,
the user can only use the standard modes configured at compile time. In fixed 
and  programmable mode, the user can switch from the main mode group to the
extended group by repeatedly switching modes for a certain count of times
in a row. 

In extended mode the user can cycle through all mode lines defined
in EEPROM. After staying in one mode for more than two seconds, the light
will return to the standard mode group the next time it is switched on. The
light will give a short visual feed back (two short blinks) upon entering and
leaving the extended mode group. 

In programmable mode, the user may assign any mode from the extended mode 
group to any mode slot in the standard mode group. See the instructions below
on how to perform mode programming

What to do with the source
==========================

To build the driver, you will need the gcc-avr tool-chain (gcc, binutils, 
avr-libc) plus other standard development tools. Since this program is
entirely useless to anyone without the necessary hardware to flash it 
into the ATtiny and anyone in possession of said hardware can reasonably
be expected to be knowledgeable enough on where to get and how to use this
tools, I will not go into details on how to build and install. Just look
at the source and you will know what to do. I have developed and tested 
this on an ATtiny13, running off the internal oscillator at 4.8MHz.

The archive contains an Eclipse C/C++ AVR project and can be imported as such.

The driver can also be built from the command line, just cd into one of the 
configuration dirs ("Default", "Fixed Modes", "Programmable", "Simple") and 
type 'make'. If your tool chain is set up correctly, this should build, among 
other things, the files BLF-VLD.hex and BLF-VLD.eep, which are the flash and 
eeprom images that need to be flashed into the ATtiny. 

The archive contains prepared images in each configuration directory. "Simple"
is a simple 3-mode driver with just low, medium and high modes.

"Fixed Modes" has the same modes in the standard mode group, but the extended
mode group can be accessed by switching modes six times in a row.

With the "Programmable" driver, any mode of the extended mode group can be
assigned to any mode slot in the standard group. See below on how to do this.



How to program the modes
========================

To enter programming mode, first choose the mode slot you wish to reassign and
stay in that mode for more than two seconds. Now change mode NUM_EXT_CLICKS
times in a row. The light will give two short blinks and enter the extended
mode group. Choose the mode you wish to assign and stay in it for more than 
two seconds, then switch the light off. When switched on again, the light
will give two short blinks and you will have to lock in the new mode.

To acknowledge the programming, you will have to follow a timed sequence of
"taps". "Tapping" means turning the light on for only a short period of time. 
A short tap is less than 1 second, a long tap is between 1 and 2 seconds. To 
lock in the programming, you will have to tap short-short-long-short. If the 
driver has been compiled with the proghelper enabled, the light will signal 
the appropriate moment to switch off by briefly rising or lowering the light
level, depending on the current light mode.
